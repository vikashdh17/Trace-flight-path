fig = plt.figure(figsize= (8, 8), dpi =100)

m = Basemap(projection='lcc', resolution ='h',
            width = 7E6, height=7E6,
            lat_0=21.433,lon_0=87.01)
m.etopo(scale=0.5,alpha=0.5)
m.bluemarble(scale=0.5)

x, y = m(77.20, 28.70)
plt.plot(x, y, 'ok', markersize=5)
plt.text(x, y, 'New Delhi')

x1, y1 = m(72.87, 19.07)
plt.plot(x1, y1, 'ok', markersize=5)
plt.text(x1, y1, 'Mumbai')

x2, y2 = m(80.27, 13.08)
plt.plot(x2, y2, 'ok', markersize=5)
plt.text(x2, y2, 'Chennai')

x4, y4 = m(77.59, 12.97)
plt.plot(x4, y4, 'ok', markersize=5)
plt.text(x4, y4, 'Bengaluru')

plt.title('Major Indian Airport Mapped and Geo-Referenced/coordinated')
plt.savefig('plot.png')
plt.show()
from datetime import datetime

plt.figure(figsize=(10,5), dpi=100)
map = Basemap(projection='mill',lon_0=180)

map.drawcoastlines()
map.drawcountries()
map.drawmapboundary(fill_color='aqua')
map.fillcontinents(color='green', lake_color='aqua')
map.drawparallels(np.arange(-90,90,30), labels=[1,0,0,0])
map.drawmeridians(np.arange(map.lonmin,map.lonmax+30,60), labels=[0,0,0,1])


date = datetime.utcnow()

CS = map.nightshade(date)

plt.title('World Day/Night Map for %s (UTC) on Miller Cylindrical Projection'% date.strftime("%d %b %y %H:%M:%S"))

plt.savefig('plot.png')
plt.show()

num_points = 100

lon_interp = np.linspace(ndlon,lonlon,num_points)
lat_interp = np.linspace(ndlat, lonlat, num_points)

x_interp, y_interp = m(lon_interp, lat_interp)

plt.plot(x_interp, y_interp, 'b--', linewidth=2)

line, = plt.plot([], [], 'r--',linewidth=2)

flt_marker, = plt.plot([], [], 'k*', markersize = 10)


def init():
  line.set_data([], []);
  flt_marker.set_data([], []);
  return line, flt_marker;


def update(frame):
  line.set_data(x_interp[:frame], y_interp[:frame]);
  flt_marker.set_data(x_interp[frame], y_interp[frame]);
  return line, flt_marker;
m.drawcoastlines()
m.drawcountries()
m.drawmapboundary(fill_color='aqua')
m.fillcontinents(color='green', lake_color='aqua')



m.drawparallels(np.arange(10,90,20), labels=[1,1,0,1])
m.drawmeridians(np.arange(-180,180,30), labels=[1,1,0,1])

ax.set_title('Flight Path from London to New Delhi')


ani = FuncAnimation(fig, update, frames=num_points, init_func = init,interval = 100, blit=True)

HTML(ani.to_html5_video())
HTML(ani.to_jshtml())

ani.save('flight_animation.gif', writer='pillow', fps=10)
